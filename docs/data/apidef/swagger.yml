components:
  parameters:
    appCurrentVersionParam:
      description: "<small><b>Aktu\xE1ln\xED verze aplikace. </b>\n<p>P\u0159\xED\
        klad: currentversion=2</p></small>\n"
      in: query
      name: currentversion
      schema:
        example: 2
        format: int32
        type: integer
    audioFormatParam:
      description: "<small><b>Form\xE1t a kvalita audio streamu/souboru.</b>\n<p>P\u0159\
        \xEDklad: audioformat=mp31</p></small>\n"
      in: query
      name: audioformat
      schema:
        default: mp31
        enum:
        - mp31
        - mp32
        - aac
        - ogg
        - flac
        type: string
    authTokenParam:
      description: "Autoriza\u010Dn\xED token u\u017Eivatele"
      in: header
      name: token
      required: true
      schema:
        format: uuid
        type: string
    emailParam:
      description: Email address
      in: query
      name: email
      required: true
      schema:
        format: email
        type: string
    filterParam:
      description: "<small><b>Filtrov\xE1n\xED: <code>filter[{relatedObject.}fieldName\
        \ | implicitFilter]{[op]}=value</code></b>\n<p>relatedObject - N\xE1zev relationships\
        \ objektu, ve kter\xE9m prob\xEDh\xE1 filtrace. Neuv\xE1d\xED se je-li objektem\
        \ filtrov\xE1n\xED pole prim\xE1rn\xEDch dat.</p>\n<p>fieldName - N\xE1zev\
        \ pole.</p>\n<p>implicitFilter - N\xE1zev implicitn\xEDho filtru.<br/>\nSeznam:<br/>\n\
        onlyPlayable: true - entity obsahuj\xEDc\xED p\u0159ehrateln\xE9 audio, false\
        \ - v\u0161echny entity.<br/>\nfullText - fulltextov\xE9 vyhled\xE1v\xE1n\xED\
        .<br/>\n</p>\n<p>op - operace pro vyhodnocen\xED filtrovan\xE9 hodnoty value.<br/>\n\
        K\xF3dy:<br/>\n  eq - hodnoty mus\xED b\xFDt shodn\xE9<br/>\n  ne - hodnoty\
        \ nesm\xED b\xFDt shodn\xE9<br/>\n  gt - hodnota pole je v\u011Bt\u0161\xED\
        \ ne\u017E value<br/>\n  ge - hodnota pole je v\u011Bt\u0161\xED nebo rovna\
        \ ne\u017E value<br/>\n  lt - hodnota pole je men\u0161\xED ne\u017E value<br/>\n\
        \  le - hodnota pole je men\u0161\xED nebo rovna ne\u017E value<br/>\n  like\
        \ - hodnota pole obsahuje \u010D\xE1st \u0159et\u011Bzce value<br/>\nNen\xED\
        -li uvedena, pou\u017Eije se operace eq</p>\n<b>V p\u0159\xEDpad\u011B v\xED\
        cen\xE1sobn\xE9ho pou\u017Eit\xED se mezi jednotliv\xFDmi p\u0159\xEDpady\
        \ implicitn\u011B p\u0159edpokl\xE1d\xE1 logick\xFD sou\u010Din.</b><br/>\n\
        <b>P\u0159\xEDklady:<br/>\nfilter[title][eq]=Zpr\xE1vy&filter[updated][gt]=2019-03-21T14:00<br/>\n\
        filter[fulltext]=buch zpra&filter[type]=episode\n</b></small>\n"
      explode: true
      in: query
      name: filter
      schema:
        type: object
      style: deepObject
    imageStyleNameParam:
      description: "Styl obr\xE1zku"
      in: path
      name: imageStyleName
      required: true
      schema:
        enum:
        - thumbnail-square
        - large-square
        - large-16x9
        type: string
    includeParam:
      description: "<small><b>Vlo\u017E\xED entity related objekt\u016F: <code>include=relationshipsObject{,\
        \ ...}</code></b>\n<p>relatedObject - N\xE1zev relationships objektu, kter\xFD\
        \ bude sou\u010D\xE1st\xED responsu. Tzv. compound documents.</p>\n<p>P\u0159\
        \xEDklad: include=episodes,keywords</p>\n<p>P\u0159\xEDklad: include=items.entity</p></small>\n"
      in: query
      name: include
      schema:
        type: string
    pageParam:
      description: "<small><b>Str\xE1nkov\xE1n\xED: <code>page[offset]=numValue&page[limit]=numValue</code></b>\n\
        <p>numValue - celo\u010D\xEDslen\xE1 hodnota.</p>\n<p>page[offset] po\u017E\
        adovan\xE1 pozice v kolekci. Hodnota numValue mus\xED b\xFDt z intervalu <0..M>.\
        \ Hodnota numValue nesm\xED b\xFDt v\u011Bt\u0161\xED ne\u017E je po\u010D\
        et str\xE1nek</p>\n<p>page[limit] ur\u010Duje po\u010Det entit na str\xE1\
        nce. Hodnota numValue mus\xED b\xFDt z intervalu <1..N>. Maxim\xE1ln\xED hodnota\
        \ numValue m\u016F\u017Ee b\xFDt na serveru omezena.</p></small>\n"
      explode: true
      in: query
      name: page
      schema:
        properties:
          limit:
            example: 4
            format: int32
            type: integer
          offset:
            example: 0
            format: int32
            type: integer
        type: object
      style: deepObject
    sortParam:
      description: "<small><b>\u0158azeni: <code>sort={-}{relatedObject.}fieldName\
        \ {, ...}</code></b>\n<p>Operator - (minus) ozna\u010Duje sm\u011Br pro sestupn\xE9\
        \ \u0159ezen\xED.</p>\n<p>relatedObject - N\xE1zev relationships objektu,\
        \ ve kter\xE9m prob\xEDh\xE1 filtrace. Neuv\xE1d\xED se je-li objektem filtrov\xE1\
        n\xED pole prim\xE1rn\xEDch dat.</p>\n<p>fieldName - N\xE1zev pole.</p>\n\
        <p>P\u0159\xEDklad: sort=title, -updated</p></small>\n"
      in: query
      name: sort
      schema:
        type: string
    stationCodeParam:
      description: "<small><b>Omezen\xED dle k\xF3du stanice</b>\n<p>P\u0159\xEDklad:\
        \ station=radiozurnal</p></small>\n"
      in: query
      name: station
      schema:
        default: radiozurnal
        type: string
    uuidParam:
      description: "Identifik\xE1tor entity"
      in: path
      name: id
      required: true
      schema:
        format: uuid
        type: string
  requestBodies:
    carmodes_post:
      content:
        application/vnd.api+json:
          schema:
            properties:
              data:
                items:
                  allOf:
                  - $ref: '#/components/schemas/carmodeType'
                  - $ref: '#/components/schemas/carmodeRelationships'
                type: array
            type: object
      required: true
    favourite_patch:
      content:
        application/vnd.api+json:
          schema:
            properties:
              data:
                allOf:
                - $ref: '#/components/schemas/favouriteId'
                - $ref: '#/components/schemas/favouriteData'
            type: object
      required: true
    favourites_post:
      content:
        application/vnd.api+json:
          schema:
            properties:
              data:
                items:
                  allOf:
                  - $ref: '#/components/schemas/favouriteType'
                  - $ref: '#/components/schemas/favouriteRelationships'
                type: array
            type: object
      required: true
    favourites_put:
      content:
        application/vnd.api+json:
          schema:
            properties:
              data:
                items:
                  allOf:
                  - $ref: '#/components/schemas/favouriteId'
                  - $ref: '#/components/schemas/favouriteData'
                  - $ref: '#/components/schemas/favouriteMeta'
                  - $ref: '#/components/schemas/favouriteRelationships'
                type: array
            type: object
      required: true
    history_items_post:
      content:
        application/vnd.api+json:
          schema:
            properties:
              data:
                items:
                  allOf:
                  - $ref: '#/components/schemas/historyType'
                  - $ref: '#/components/schemas/historyData'
                  - $ref: '#/components/schemas/historyRelationships'
                type: array
            type: object
      required: true
    queue_item_patch:
      content:
        application/vnd.api+json:
          schema:
            properties:
              data:
                allOf:
                - $ref: '#/components/schemas/queueId'
                - $ref: '#/components/schemas/queueData'
            type: object
      required: true
    queue_item_post:
      content:
        application/vnd.api+json:
          schema:
            properties:
              data:
                allOf:
                - properties:
                    meta:
                      properties:
                        insertionPoint:
                          properties:
                            id:
                              format: uuid
                              type: string
                            mode:
                              default: after
                              enum:
                              - after
                              - before
                              type: string
                          type: object
                      type: object
                  type: object
                - $ref: '#/components/schemas/queueType'
                - $ref: '#/components/schemas/queueRelationships'
            type: object
      required: true
    queue_item_put:
      content:
        application/vnd.api+json:
          schema:
            properties:
              data:
                items:
                  allOf:
                  - $ref: '#/components/schemas/queueId'
                  - $ref: '#/components/schemas/queueData'
                  - $ref: '#/components/schemas/queueRelationships'
                type: array
            type: object
      required: true
    register_patch:
      content:
        application/vnd.api+json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/registerData_patch'
            type: object
      required: true
    register_post:
      content:
        application/vnd.api+json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/registerData_post'
            type: object
      required: true
    relationships_toMany:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/resourceObjects'
      required: true
    relationships_toOne:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/resourceObject'
      required: true
    subscription_post:
      content:
        application/vnd.api+json:
          schema:
            properties:
              data:
                allOf:
                - $ref: '#/components/schemas/subscriptionType'
                - $ref: '#/components/schemas/subscriptionRelationships'
            type: object
      required: true
    watchdog_post:
      content:
        application/vnd.api+json:
          schema:
            properties:
              data:
                items:
                  allOf:
                  - $ref: '#/components/schemas/watchdogType'
                  - $ref: '#/components/schemas/watchdogRelationships'
                type: array
            type: object
      required: true
  responses:
    badRequestError:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/errors_resp'
      description: Bad Request
    conflictError:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/errors_resp'
      description: Conflict
    forbidenError:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/errors_resp'
      description: Forbidden
    notFoundError:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/errors_resp'
      description: Not found
    unauthorizedError:
      description: Unauthorized
  schemas:
    assetItem:
      nullable: true
      properties:
        credit:
          properties:
            author:
              type: string
            description:
              type: string
            license:
              type: string
            source:
              type: string
          type: object
        height:
          example: 1400
          format: int32
          type: integer
        id:
          example: ef2b07d0-94ba-44b8-a53c-eaf34bbe45ec
          format: uuid
          type: string
        url:
          format: url
          type: string
        width:
          example: 2100
          format: int32
          type: integer
      type: object
    audioLink_item:
      properties:
        bitrate:
          deprecated: true
          example: 128
          format: int32
          type: integer
        linkType:
          enum:
          - ondemand
          - download
          type: string
        quality:
          enum:
          - low
          - high
          type: string
        url:
          format: url
          type: string
        variant:
          enum:
          - dash
          - hls
          - mp3
          type: string
      type: object
    availability_resp:
      properties:
        meta:
          properties:
            available:
              example: true
              type: boolean
          type: object
      type: object
    carmodeData:
      properties:
        attributes:
          properties:
            created:
              format: datetime
              readOnly: true
              type: string
          type: object
      type: object
    carmodeId:
      allOf:
      - $ref: '#/components/schemas/carmodeType'
      - properties:
          id:
            example: 6ffa4938-0f45-4d00-898b-5de49b8ddf0e
            format: uuid
            type: string
        type: object
    carmodeItem:
      allOf:
      - $ref: '#/components/schemas/carmodeId'
      - $ref: '#/components/schemas/carmodeData'
    carmodeItem_relationships:
      allOf:
      - $ref: '#/components/schemas/carmodeItem'
      - $ref: '#/components/schemas/carmodeRelationships'
    carmodeRelationships:
      properties:
        relationships:
          properties:
            playable:
              properties:
                id:
                  format: uuid
                  type: string
                type:
                  example: episode
                  type: string
              type: object
          type: object
      type: object
    carmodeType:
      properties:
        type:
          example: carMode
          type: string
      type: object
    carmode_resp:
      properties:
        data:
          $ref: '#/components/schemas/carmodeItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    carmodes_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/carmodeItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    carousel_audio_full_object:
      properties:
        description:
          type: string
        entity:
          $ref: '#/components/schemas/episodeItem_relationships'
        image:
          format: url
          type: string
        itemType:
          example: audio
          type: string
        title:
          type: string
        url:
          format: url
          type: string
      type: object
    carousel_audio_object:
      properties:
        description:
          type: string
        entity:
          properties:
            id:
              format: uuid
              type: string
            type:
              enum:
              - episode
              - show
              type: string
          type: object
        image:
          format: url
          type: string
        itemType:
          example: audio
          type: string
        title:
          type: string
        url:
          format: url
          type: string
      type: object
    carousel_full_object:
      properties:
        attributes:
          properties:
            items:
              items:
                discriminator:
                  mapping:
                    audio: '#/components/schemas/carousel_audio_full_object'
                    shirt: '#/components/schemas/carousel_shirt_full_object'
                  propertyName: itemType
                oneOf:
                - $ref: '#/components/schemas/carousel_audio_full_object'
                - $ref: '#/components/schemas/carousel_shirt_full_object'
              type: array
            title:
              example: "Doporu\u010Dujeme"
              type: string
          type: object
        id:
          format: int32
          type: integer
        type:
          example: carousel
          type: string
      type: object
    carousel_object:
      properties:
        attributes:
          properties:
            items:
              items:
                discriminator:
                  mapping:
                    audio: '#/components/schemas/carousel_audio_object'
                    shirt: '#/components/schemas/carousel_shirt_object'
                  propertyName: itemType
                oneOf:
                - $ref: '#/components/schemas/carousel_audio_object'
                - $ref: '#/components/schemas/carousel_shirt_object'
              type: array
            title:
              type: string
          type: object
        id:
          format: int32
          type: integer
        type:
          example: carousel
          type: string
      type: object
    carousel_shirt_full_object:
      properties:
        description:
          type: string
        entity:
          $ref: '#/components/schemas/episodeItem_relationships'
        image:
          format: url
          type: string
        itemType:
          example: shirt
          type: string
        title:
          type: string
        url:
          format: url
          type: string
      type: object
    carousel_shirt_object:
      properties:
        description:
          type: string
        entity:
          nullable: true
          properties:
            id:
              format: uuid
              type: string
            type:
              type: string
          type: object
        image:
          format: url
          type: string
        itemType:
          example: shirt
          type: string
        title:
          type: string
        url:
          format: url
          type: string
      type: object
    carousel_widget:
      properties:
        attributes:
          properties:
            items:
              items:
                $ref: '#/components/schemas/carousel_audio_object'
              type: array
            title:
              type: string
          type: object
        id:
          format: int32
          type: integer
        type:
          example: carousel
          type: string
      type: object
    children_shows:
      properties:
        attributes:
          properties:
            title:
              example: "Po\u0159ady pro d\u011Bti"
              type: string
          type: object
        id:
          example: 1
          format: int32
          type: integer
        type:
          example: children_shows
          type: string
      type: object
    content_section_object:
      properties:
        attributes:
          properties:
            entities:
              items:
                properties:
                  id:
                    format: uuid
                    type: string
                  type:
                    enum:
                    - episode
                    - show
                    - serial
                    type: string
                type: object
              type: array
            title:
              type: string
          type: object
        id:
          format: int32
          type: integer
        type:
          example: content_section
          type: string
      type: object
    dashboard_full_object:
      properties:
        attributes:
          properties:
            items:
              items:
                discriminator:
                  mapping:
                    dashboard_most_popular: '#/components/schemas/dashboard_most_popular_full_object'
                    dashboard_topic: '#/components/schemas/dashboard_topic_full_object'
                  propertyName: dashboardType
                oneOf:
                - $ref: '#/components/schemas/dashboard_most_popular_full_object'
                - $ref: '#/components/schemas/dashboard_topic_full_object'
              type: array
          type: object
        id:
          format: int32
          type: integer
        type:
          example: dashboard
          type: string
      type: object
    dashboard_most_popular_full_object:
      properties:
        attributes:
          properties:
            episodes:
              items:
                $ref: '#/components/schemas/episodeItem_relationships'
              type: array
            title:
              type: string
          type: object
        dashboardType:
          example: dashboard_most_popular
          type: string
        id:
          format: int32
          type: integer
      type: object
    dashboard_most_popular_object:
      properties:
        attributes:
          properties:
            episodes:
              items:
                properties:
                  id:
                    format: uuid
                    type: string
                  type:
                    enum:
                    - episode
                    type: string
                type: object
              type: array
            title:
              type: string
          type: object
        dashboardType:
          example: dashboard_most_popular
          type: string
        id:
          format: int32
          type: integer
      type: object
    dashboard_news_object:
      properties:
        attributes:
          properties:
            entities:
              items:
                properties:
                  attributes:
                    properties:
                      episodes:
                        items:
                          properties:
                            id:
                              format: uuid
                              type: string
                            type:
                              enum:
                              - episode
                              type: string
                          type: object
                        type: array
                      title:
                        type: string
                    type: object
                  id:
                    format: uuid
                    type: string
                  type:
                    enum:
                    - station
                    type: string
                type: object
              type: array
            title:
              type: string
          type: object
        dashboardType:
          example: dashboard_news
          type: string
        id:
          format: int32
          type: integer
      type: object
    dashboard_object:
      properties:
        attributes:
          properties:
            items:
              items:
                discriminator:
                  mapping:
                    dashboard_most_popular: '#/components/schemas/dashboard_most_popular_object'
                    dashboard_topic: '#/components/schemas/dashboard_topic_object'
                  propertyName: dashboardType
                oneOf:
                - $ref: '#/components/schemas/dashboard_most_popular_object'
                - $ref: '#/components/schemas/dashboard_topic_object'
              type: array
          type: object
        id:
          format: int32
          type: integer
        type:
          example: dashboard
          type: string
      type: object
    dashboard_selection_object:
      properties:
        attributes:
          properties:
            entity:
              properties:
                attributes:
                  properties:
                    episodes:
                      items:
                        properties:
                          id:
                            format: uuid
                            type: string
                          type:
                            enum:
                            - episode
                            type: string
                        type: object
                      type: array
                    url:
                      format: url
                      type: string
                  type: object
                id:
                  format: uuid
                  type: string
                type:
                  enum:
                  - selection
                  type: string
              type: object
            title:
              type: string
          type: object
        dashboardType:
          example: dashboard_selection
          type: string
        id:
          format: int32
          type: integer
      type: object
    dashboard_show_object:
      properties:
        attributes:
          properties:
            entity:
              properties:
                attributes:
                  properties:
                    episodes:
                      items:
                        properties:
                          id:
                            format: uuid
                            type: string
                          type:
                            enum:
                            - episode
                            type: string
                        type: object
                      type: array
                    title:
                      type: string
                  type: object
                id:
                  format: uuid
                  type: string
                type:
                  enum:
                  - show
                  type: string
              type: object
            title:
              type: string
          type: object
        dashboardType:
          example: dashboard_show
          type: string
        id:
          format: int32
          type: integer
      type: object
    dashboard_tags_object:
      properties:
        attributes:
          properties:
            entities:
              items:
                properties:
                  attributes:
                    properties:
                      episodes:
                        items:
                          properties:
                            id:
                              format: uuid
                              type: string
                            type:
                              enum:
                              - episode
                              type: string
                          type: object
                        type: array
                      title:
                        type: string
                    type: object
                  id:
                    format: uuid
                    type: string
                  type:
                    enum:
                    - tag
                    type: string
                type: object
              type: array
            title:
              type: string
          type: object
        dashboardType:
          example: dashboard_tags
          type: string
        id:
          format: int32
          type: integer
      type: object
    dashboard_topic_full_object:
      properties:
        attributes:
          properties:
            entity:
              properties:
                attributes:
                  properties:
                    episodes:
                      items:
                        $ref: '#/components/schemas/episodeItem_relationships'
                      type: array
                    url:
                      format: url
                      type: string
                  type: object
                id:
                  format: uuid
                  type: string
                type:
                  enum:
                  - topic
                  type: string
              type: object
            title:
              type: string
          type: object
        dashboardType:
          example: dashboard_topic
          type: string
        id:
          format: int32
          type: integer
      type: object
    dashboard_topic_object:
      properties:
        attributes:
          properties:
            entity:
              properties:
                attributes:
                  properties:
                    episodes:
                      items:
                        properties:
                          id:
                            format: uuid
                            type: string
                          type:
                            enum:
                            - episode
                            type: string
                        type: object
                      type: array
                    url:
                      format: url
                      type: string
                  type: object
                id:
                  format: uuid
                  type: string
                type:
                  enum:
                  - topic
                  type: string
              type: object
            title:
              type: string
          type: object
        dashboardType:
          example: dashboard_topic
          type: string
        id:
          format: int32
          type: integer
      type: object
    deleted_entity_resp:
      properties:
        data:
          items:
            properties:
              attributes:
                properties:
                  entityId:
                    format: uuid
                    type: string
                  entityType:
                    enum:
                    - episode
                    example: episode
                    type: string
                type: object
              id:
                format: uuid
                type: string
              type:
                example: deletedEntity
                type: string
            required:
            - type
            - id
            type: object
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              example: 1
              format: int32
              type: integer
          type: object
      type: object
    entity_list_full_object:
      properties:
        attributes:
          properties:
            entities:
              items:
                oneOf:
                - $ref: '#/components/schemas/episodeItem_relationships'
                - $ref: '#/components/schemas/serialItem'
              type: array
            title:
              type: string
          type: object
        id:
          format: int32
          type: integer
        type:
          example: entity_list
          type: string
      type: object
    episodeData:
      properties:
        attributes:
          properties:
            asset:
              $ref: '#/components/schemas/assetItem'
            audioLinks:
              items:
                $ref: '#/components/schemas/audioLink_item'
              type: array
            description:
              example: Popis episody
              type: string
            mirroredSerial:
              properties:
                title:
                  example: Meteor
                  type: string
                totalParts:
                  example: 5
                  format: int32
                  type: integer
              type: object
            mirroredShow:
              properties:
                title:
                  example: Meteor
                  type: string
              type: object
            part:
              format: int32
              minimum: 1
              nullable: true
              type: integer
            shortTitle:
              example: Short varianta
              type: string
            since:
              example: '2019-05-13T19:00:07+02:00'
              format: date-time
              type: string
            till:
              example: '2019-05-13T19:17:22+02:00'
              format: date-time
              type: string
            title:
              example: "Testovac\xED epizoda mockup"
              type: string
            updated:
              description: "datum posledn\xED aktualizace v rApi - ISO 8601"
              format: date-time
              type: string
          type: object
      type: object
    episodeId:
      allOf:
      - $ref: '#/components/schemas/episodeType'
      - properties:
          id:
            example: e0808c94-2e3c-4980-8483-025d94bc7cf3
            format: uuid
            type: string
        type: object
    episodeItem:
      allOf:
      - $ref: '#/components/schemas/episodeId'
      - $ref: '#/components/schemas/episodeData'
      - $ref: '#/components/schemas/episodeMeta'
    episodeItem_relationships:
      allOf:
      - $ref: '#/components/schemas/episodeItem'
      - properties:
          relationships:
            allOf:
            - $ref: '#/components/schemas/show_r_part'
            - $ref: '#/components/schemas/serial_r_part'
            - $ref: '#/components/schemas/keywords_r_part'
            - $ref: '#/components/schemas/genres_r_part'
        type: object
    episodeItem_relationships_link:
      allOf:
      - properties:
          links:
            $ref: '#/components/schemas/selfLink'
        type: object
      - $ref: '#/components/schemas/episodeItem_relationships'
    episodeMeta:
      properties:
        meta:
          properties:
            ga:
              properties:
                contentCreator:
                  type: string
                contentId:
                  type: string
              type: object
          type: object
      type: object
    episodeType:
      properties:
        type:
          example: episode
          type: string
      type: object
    episode_resp:
      properties:
        data:
          $ref: '#/components/schemas/episodeItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    episodesId_r_part:
      properties:
        episodes:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 298f27ec-81a1-4e67-bdbe-89f05f3f5028
                    format: uuid
                    type: string
                  type:
                    example: episode
                    type: string
                type: object
              type: array
          type: object
      type: object
    episodesLink_r_part:
      properties:
        episodes:
          properties:
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
          type: object
      type: object
    episodes_r_part:
      properties:
        episodes:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 298f27ec-81a1-4e67-bdbe-89f05f3f5028
                    format: uuid
                    type: string
                  type:
                    example: episode
                    type: string
                type: object
              type: array
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
            meta:
              properties:
                count:
                  format: int32
                  type: integer
              type: object
          type: object
      type: object
    episodes_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/episodeItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              example: 3
              format: int32
              type: integer
          type: object
      type: object
    errors_resp:
      properties:
        errors:
          items:
            properties:
              code:
                description: "K\xF3d chyby"
                example: ERROR_UNACTIVATED_ACCOUNT
                type: string
              detail:
                description: "Popis p\u0159\xEDpadu, kdy chyba vznikla"
                type: string
              id:
                description: Optional, error id in log
                format: uuid
                type: string
              status:
                description: "Http status k\xF3d"
                example: '400'
                type: string
              title:
                description: "Obecn\xFD popis chyby - asi enumerace?\nNap\u0159: out\
                  \ of range, limit exceeded,\n"
                type: string
            type: object
          type: array
      type: object
    favouriteData:
      properties:
        attributes:
          properties:
            created:
              format: datetime
              readOnly: true
              type: string
            top:
              type: boolean
          type: object
      type: object
    favouriteId:
      allOf:
      - $ref: '#/components/schemas/favouriteType'
      - properties:
          id:
            example: 6ffa4938-0f45-4d00-898b-5de49b8ddf0e
            format: uuid
            type: string
        type: object
    favouriteItem:
      allOf:
      - $ref: '#/components/schemas/favouriteId'
      - $ref: '#/components/schemas/favouriteData'
    favouriteItem_relationships:
      allOf:
      - $ref: '#/components/schemas/favouriteItem'
      - $ref: '#/components/schemas/favouriteRelationships'
    favouriteMeta:
      properties:
        meta:
          properties:
            operation:
              enum:
              - insert
              - delete
              type: string
              writeOnly: true
          type: object
      type: object
    favouriteRelationships:
      properties:
        relationships:
          properties:
            playable:
              properties:
                id:
                  format: uuid
                  type: string
                type:
                  enum:
                  - episode
                  - show
                  - serial
                  example: episode
                  type: string
              type: object
          type: object
      type: object
    favouriteType:
      properties:
        type:
          example: favourite
          type: string
      type: object
    favourite_included_part:
      items:
        discriminator:
          mapping:
            episode: '#/components/schemas/episodeItem_relationships_link'
            serial: '#/components/schemas/serialItem_relationships_link'
            show: '#/components/schemas/showItem_relationships_link'
          propertyName: type
        oneOf:
        - $ref: '#/components/schemas/episodeItem_relationships_link'
        - $ref: '#/components/schemas/showItem_relationships_link'
        - $ref: '#/components/schemas/serialItem_relationships_link'
      type: array
    favourite_resp:
      properties:
        data:
          $ref: '#/components/schemas/favouriteItem_relationships'
        included:
          $ref: '#/components/schemas/favourite_included_part'
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    favourites_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/favouriteItem_relationships'
          type: array
        included:
          $ref: '#/components/schemas/favourite_included_part'
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    genresItem:
      properties:
        attributes:
          properties:
            title:
              example: Drama
              type: string
          type: object
        id:
          example: b0a137c9-5918-438d-8c33-4a3889b80ea3
          format: uuid
          type: string
        type:
          example: genre
          type: string
      required:
      - type
      - id
      type: object
    genres_r_part:
      properties:
        genres:
          properties:
            data:
              items:
                nullable: true
                properties:
                  id:
                    example: b0a137c9-5918-438d-8c33-4a3889b80ea3
                    format: uuid
                    type: string
                  type:
                    example: genre
                    type: string
                type: object
              type: array
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
          type: object
      type: object
    genres_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/genresItem'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              example: 2
              format: int32
              type: integer
          type: object
      type: object
    histories_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/historyItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    historyData:
      properties:
        attributes:
          properties:
            created:
              format: datetime
              type: string
            mediaTitle:
              type: string
            playedCount:
              format: int32
              type: integer
            progress:
              format: int32
              type: integer
          type: object
      type: object
    historyId:
      allOf:
      - $ref: '#/components/schemas/historyType'
      - properties:
          id:
            example: 6ffa4938-0f45-4d00-898b-5de49b8ddf0e
            format: uuid
            type: string
        type: object
    historyItem:
      allOf:
      - $ref: '#/components/schemas/historyId'
      - $ref: '#/components/schemas/historyData'
    historyItem_relationships:
      allOf:
      - $ref: '#/components/schemas/historyItem'
      - $ref: '#/components/schemas/historyRelationships'
    historyRelationships:
      properties:
        relationships:
          properties:
            playable:
              properties:
                id:
                  format: uuid
                  type: string
                type:
                  example: episode
                  type: string
              type: object
          type: object
      type: object
    historyType:
      properties:
        type:
          example: history
          type: string
      type: object
    history_resp:
      properties:
        data:
          $ref: '#/components/schemas/historyItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    homepageItem:
      discriminator:
        mapping:
          carousel: '#/components/schemas/carousel_object'
          content_section: '#/components/schemas/content_section_object'
          dashboard: '#/components/schemas/dashboard_object'
          section_category: '#/components/schemas/section_category_object'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/carousel_object'
      - $ref: '#/components/schemas/dashboard_object'
      - $ref: '#/components/schemas/content_section_object'
      - $ref: '#/components/schemas/section_category_object'
    homepage_fullItem:
      discriminator:
        mapping:
          carousel: '#/components/schemas/carousel_full_object'
          dashboard: '#/components/schemas/dashboard_full_object'
          entity_list: '#/components/schemas/entity_list_full_object'
          section_category: '#/components/schemas/section_category_full_object'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/carousel_full_object'
      - $ref: '#/components/schemas/dashboard_full_object'
      - $ref: '#/components/schemas/entity_list_full_object'
      - $ref: '#/components/schemas/section_category_full_object'
    homepage_full_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/homepage_fullItem'
          type: array
      type: object
    homepage_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/homepageItem'
          type: array
      type: object
    keywordItem:
      properties:
        attributes:
          properties:
            title:
              type: string
          type: object
        id:
          example: ec792f02-4cec-492d-8252-f88934e018c6
          format: uuid
          type: string
        type:
          example: keyword
          type: string
      type: object
    keywordItem_relationships:
      allOf:
      - $ref: '#/components/schemas/keywordItem'
      - properties:
          relationships:
            allOf:
            - $ref: '#/components/schemas/episodes_r_part'
        type: object
    keyword_resp:
      properties:
        data:
          $ref: '#/components/schemas/keywordItem'
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    keywords_r_part:
      properties:
        keywords:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 298f27ec-81a1-4e67-bdbe-89f05f3f5028
                    format: uuid
                    type: string
                  type:
                    example: keyword
                    type: string
                type: object
              type: array
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
          type: object
      type: object
    keywords_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/keywordItem'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              example: 3
              format: int32
              type: integer
          type: object
      type: object
    pageLink:
      properties:
        first:
          format: url
          nullable: true
          type: string
        last:
          format: url
          nullable: true
          type: string
        next:
          format: url
          nullable: true
          type: string
        prev:
          format: url
          nullable: true
          type: string
      type: object
    parentEpisode_r_part:
      properties:
        parentEpisode:
          properties:
            data:
              nullable: true
              properties:
                id:
                  example: bc7c703f-4c2b-4a27-be93-acc493d0a881
                  format: uuid
                  type: string
                type:
                  example: episode
                  type: string
              type: object
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
          type: object
      type: object
    participation_r_part:
      properties:
        participation:
          properties:
            data:
              items:
                properties:
                  id:
                    format: uuid
                    type: string
                  meta:
                    properties:
                      role:
                        enum:
                        - autor
                        - director
                        - technician
                        - announcer
                        - editor
                        - moderator
                        - anchorperson
                        - others
                        type: string
                    type: object
                  type:
                    enum:
                    - station
                    - show
                    - episode
                    example: episode
                    type: string
                type: object
              type: array
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
          type: object
      type: object
    personData:
      properties:
        attributes:
          properties:
            asset:
              $ref: '#/components/schemas/assetItem'
            description:
              type: string
            short_description:
              type: string
            title:
              example: "Lucie V\xFDborn\xE1"
              type: string
          type: object
      type: object
    personId:
      allOf:
      - $ref: '#/components/schemas/personType'
      - properties:
          id:
            example: 52819a4a-d22d-486d-805b-1ea8e172870b
            format: uuid
            type: string
        type: object
    personItem:
      allOf:
      - $ref: '#/components/schemas/personId'
      - $ref: '#/components/schemas/personData'
    personItem_meta_relationships:
      allOf:
      - $ref: '#/components/schemas/personItem'
      - properties:
          meta:
            properties:
              role:
                enum:
                - autor
                - director
                - technician
                - announcer
                - editor
                - anchorperson
                - others
                type: string
            type: object
        type: object
      - properties:
          relationships:
            allOf:
            - $ref: '#/components/schemas/participation_r_part'
        type: object
    personItem_relationships:
      allOf:
      - $ref: '#/components/schemas/personItem'
      - properties:
          relationships:
            allOf:
            - $ref: '#/components/schemas/participation_r_part'
        type: object
    personType:
      properties:
        type:
          example: person
          type: string
      type: object
    person_resp:
      properties:
        data:
          $ref: '#/components/schemas/personItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    persons_r_part:
      properties:
        participants:
          properties:
            data:
              items:
                properties:
                  id:
                    example: a98dc5ba-c6d5-4035-ada1-ddabbe0c6eec
                    format: uuid
                    type: string
                  meta:
                    properties:
                      role:
                        enum:
                        - autor
                        - director
                        - technician
                        - announcer
                        - editor
                        - anchorperson
                        - others
                        type: string
                    type: object
                  type:
                    example: person
                    type: string
                type: object
              type: array
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
          type: object
      type: object
    persons_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/personItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              example: 3
              format: int32
              type: integer
          type: object
      type: object
    podcast_shows:
      properties:
        attributes:
          properties:
            title:
              example: Podcasty
              type: string
          type: object
        id:
          example: 1
          format: int32
          type: integer
        type:
          example: podcast_shows
          type: string
      type: object
    queueData:
      properties:
        attributes:
          properties:
            created:
              format: datetime
              readOnly: true
              type: string
            progress:
              format: int32
              type: integer
          type: object
      type: object
    queueId:
      allOf:
      - $ref: '#/components/schemas/queueType'
      - properties:
          id:
            example: 6ffa4938-0f45-4d00-898b-5de49b8ddf0e
            format: uuid
            type: string
        type: object
    queueItem:
      allOf:
      - $ref: '#/components/schemas/queueId'
      - $ref: '#/components/schemas/queueData'
    queueItem_relationships:
      allOf:
      - $ref: '#/components/schemas/queueItem'
      - $ref: '#/components/schemas/queueRelationships'
    queueRelationships:
      properties:
        relationships:
          properties:
            playable:
              properties:
                id:
                  format: uuid
                  type: string
                type:
                  example: episode
                  type: string
              type: object
          type: object
      type: object
    queueType:
      properties:
        type:
          example: queue
          type: string
      type: object
    queue_item_resp:
      properties:
        data:
          $ref: '#/components/schemas/queueItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    queue_items_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/queueItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    recomended_children_resp:
      properties:
        data:
          items:
            oneOf:
            - $ref: '#/components/schemas/carousel_object'
            - $ref: '#/components/schemas/children_shows'
          type: array
      type: object
    recomended_podcast:
      properties:
        data:
          items:
            oneOf:
            - $ref: '#/components/schemas/carousel_object'
            - $ref: '#/components/schemas/podcast_shows'
          type: array
      type: object
    registerData_patch:
      properties:
        attributes:
          properties:
            processingPersonalData:
              type: boolean
            termsOfUse:
              type: boolean
          type: object
        id:
          format: uuid
          type: string
        type:
          example: account
          type: string
      required:
      - type
      - id
      type: object
    registerData_post:
      properties:
        attributes:
          properties:
            email:
              type: string
            name:
              type: string
            password:
              type: string
            surname:
              type: string
          required:
          - name
          - surname
          - email
          - password
          type: object
        type:
          example: account
          type: string
      required:
      - type
      type: object
    relatedLink:
      properties:
        related:
          format: url
          type: string
      readOnly: true
      type: object
    related_episode_resp:
      properties:
        data:
          $ref: '#/components/schemas/episodeItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
      type: object
    related_episodes_page_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/episodeItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              format: int32
              type: integer
          type: object
      type: object
    related_episodes_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/episodeItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
      type: object
    related_episodes_timeGroup_resp:
      properties:
        data:
          items:
            discriminator:
              mapping:
                episode: '#/components/schemas/episodeItem_relationships'
                timeGroup: '#/components/schemas/timeGroupItem_relationships'
              propertyName: type
            oneOf:
            - $ref: '#/components/schemas/episodeItem_relationships'
            - $ref: '#/components/schemas/timeGroupItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
      type: object
    related_genres_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/genresItem'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
        meta:
          properties:
            count:
              format: int32
              type: integer
          type: object
      type: object
    related_keyword_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/keywordItem'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
      type: object
    related_participatingPeson_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/personItem_meta_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
      type: object
    related_serial_resp:
      properties:
        data:
          $ref: '#/components/schemas/serialItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
      type: object
    related_serials_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/serialItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
      type: object
    related_show_resp:
      properties:
        data:
          $ref: '#/components/schemas/showItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
      type: object
    related_shows_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/showItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              format: int32
              type: integer
          type: object
      type: object
    related_station_resp:
      properties:
        data:
          $ref: '#/components/schemas/stationItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
      type: object
    related_station_show_episode_resp:
      properties:
        data:
          items:
            discriminator:
              mapping:
                episode: '#/components/schemas/episodeItem_relationships'
                show: '#/components/schemas/showItem_relationships'
                station: '#/components/schemas/stationItem_relationships'
              propertyName: type
            oneOf:
            - $ref: '#/components/schemas/episodeItem_relationships'
            - $ref: '#/components/schemas/showItem_relationships'
            - $ref: '#/components/schemas/stationItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              format: int32
              type: integer
          type: object
      type: object
    related_stations_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/stationItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
      type: object
    related_topic_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/topicItem'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
      type: object
    relationships_links:
      properties:
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
          - $ref: '#/components/schemas/relatedLink'
      type: object
    relationships_related_resp:
      allOf:
      - properties:
          links:
            allOf:
            - $ref: '#/components/schemas/relatedLink'
        type: object
      - $ref: '#/components/schemas/resourceObjects'
    relationships_resp:
      allOf:
      - $ref: '#/components/schemas/relationships_links'
      - $ref: '#/components/schemas/resourceObjects'
    relationships_self_resp:
      allOf:
      - properties:
          links:
            allOf:
            - $ref: '#/components/schemas/selfLink'
        type: object
      - $ref: '#/components/schemas/resourceObjects'
    resourceIdentification_Id:
      properties:
        id:
          format: uuid
          type: string
        type:
          type: string
      required:
      - type
      - id
      type: object
    resourceIdentification_NoId:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    resourceObject:
      properties:
        data:
          $ref: '#/components/schemas/resourceObjectItem'
      type: object
    resourceObjectItem:
      properties:
        id:
          format: uuid
          type: string
        type:
          type: string
      type: object
    resourceObjects:
      properties:
        data:
          items:
            $ref: '#/components/schemas/resourceObjectItem'
          type: array
      type: object
    scheduleItem:
      properties:
        attributes:
          properties:
            asset:
              $ref: '#/components/schemas/assetItem'
            audioLinks:
              items:
                $ref: '#/components/schemas/audioLink_item'
              type: array
            description:
              example: "Testovac\xED blok \xFAseku mockup"
              type: string
            mirroredShow:
              properties:
                title:
                  example: Show name
                  type: string
              type: object
            since:
              example: '2019-05-13T19:00:07+02:00'
              format: date-time
              type: string
            station_code:
              example: 23
              format: int32
              type: integer
            till:
              example: '2019-05-13T19:17:22+02:00'
              format: date-time
              type: string
            title:
              example: "Testovac\xED epizoda mockup"
              type: string
          type: object
        id:
          example: e0808c94-2e3c-4980-8483-025d94bc7cf3
          format: uuid
          type: string
        type:
          example: scheduleEpisode
          type: string
      required:
      - type
      - id
      type: object
    scheduleItem_relationships:
      allOf:
      - $ref: '#/components/schemas/scheduleItem'
      - properties:
          relationships:
            allOf:
            - $ref: '#/components/schemas/show_r_part'
            - $ref: '#/components/schemas/station_r_part'
        type: object
    schedule_current_items_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/scheduleItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
        meta:
          properties:
            count:
              example: 3
              format: int32
              type: integer
          type: object
      type: object
    schedule_day_items_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/scheduleItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              example: 3
              format: int32
              type: integer
          type: object
      type: object
    schedule_item_resp:
      properties:
        data:
          $ref: '#/components/schemas/scheduleItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
          - $ref: '#/components/schemas/pageLink'
      type: object
    schedule_items_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/scheduleItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              example: 3
              format: int32
              type: integer
          type: object
      type: object
    search_aggregation_resp:
      properties:
        data:
          items:
            properties:
              attributes:
                properties:
                  title:
                    example: "Informace o dopravn\xED situaci volejte na bezplatnou\
                      \ linku 800 553 553."
                    type: string
                type: object
              id:
                example: b58caa32-1eb3-42e8-9908-dd8f70a90426
                format: uuid
                type: string
              type:
                enum:
                - episode
                - person
                - serial
                - show
                example: episode
                type: string
            type: object
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              format: int32
              type: integer
          type: object
      type: object
    search_resp:
      properties:
        data:
          items:
            discriminator:
              mapping:
                episode: '#/components/schemas/episodeItem_relationships'
                keyword: '#/components/schemas/keywordItem'
                person: '#/components/schemas/personItem_relationships'
                serial: '#/components/schemas/serialItem_relationships'
                show: '#/components/schemas/showItem_relationships'
                topic: '#/components/schemas/topicItem_relationships'
              propertyName: type
            oneOf:
            - $ref: '#/components/schemas/showItem_relationships'
            - $ref: '#/components/schemas/episodeItem_relationships'
            - $ref: '#/components/schemas/serialItem_relationships'
            - $ref: '#/components/schemas/personItem_relationships'
            - $ref: '#/components/schemas/topicItem_relationships'
            - $ref: '#/components/schemas/keywordItem'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              format: int32
              type: integer
          type: object
      type: object
    section_category_full_object:
      properties:
        attributes:
          properties:
            entities:
              $ref: '#/components/schemas/showItem'
            title:
              type: string
          type: object
        id:
          format: int32
          type: integer
        type:
          example: section_category
          type: string
      type: object
    section_category_object:
      properties:
        attributes:
          properties:
            entities:
              items:
                properties:
                  id:
                    format: uuid
                    type: string
                  type:
                    enum:
                    - show
                    - episode
                    type: string
                type: object
              type: array
            title:
              type: string
          type: object
        id:
          format: int32
          type: integer
        type:
          example: section_category
          type: string
      type: object
    selfLink:
      properties:
        self:
          format: url
          type: string
      type: object
    serialItem:
      properties:
        attributes:
          properties:
            asset:
              $ref: '#/components/schemas/assetItem'
            description:
              example: "Testovac\xED seri\xE1l mockup"
              type: string
            title:
              example: "Testovac\xED seri\xE1l mockup"
              type: string
            totalParts:
              example: 5
              format: int32
              type: integer
          type: object
        id:
          example: 1aeafd46-d9af-4573-a740-3df4b5973984
          format: uuid
          type: string
        type:
          example: serial
          type: string
      required:
      - type
      - id
      type: object
    serialItem_relationships:
      allOf:
      - $ref: '#/components/schemas/serialItem'
      - properties:
          relationships:
            allOf:
            - $ref: '#/components/schemas/show_r_part'
            - $ref: '#/components/schemas/episodes_r_part'
            - $ref: '#/components/schemas/genres_r_part'
        type: object
    serialItem_relationships_link:
      allOf:
      - properties:
          links:
            $ref: '#/components/schemas/selfLink'
        type: object
      - $ref: '#/components/schemas/serialItem_relationships'
    serial_r_part:
      properties:
        serial:
          properties:
            data:
              nullable: true
              properties:
                id:
                  example: 1aeafd46-d9af-4573-a740-3df4b5973984
                  format: uuid
                  type: string
                type:
                  example: serial
                  type: string
              type: object
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
          type: object
      type: object
    serial_resp:
      properties:
        data:
          $ref: '#/components/schemas/serialItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/relatedLink'
      type: object
    serials_r_part:
      properties:
        serials:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 1aeafd46-d9af-4573-a740-3df4b5973984
                    format: uuid
                    type: string
                  type:
                    example: serial
                    type: string
                type: object
              type: array
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
          type: object
      type: object
    serials_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/serialItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              example: 2
              format: int32
              type: integer
          type: object
      type: object
    showItem:
      properties:
        attributes:
          properties:
            active:
              example: true
              type: boolean
            aired:
              example: false
              type: boolean
            asset:
              $ref: '#/components/schemas/assetItem'
            description:
              example: "Poslechn\u011Bte si p\u0159\xEDb\u011Bhy lid\xED, jejich\u017E\
                \ n\xE1pady \u010Di v\xFDrobky n\xE1s obklopuj\xED leckdy u\u017E\
                \ sto let."
              type: string
            podcast:
              example: false
              type: boolean
            shortDescription:
              example: "Testovac\xED po\u0159ad mockup"
              type: string
            showType:
              enum:
              - stream
              - show
              - special
              - podcast
              example: stream
              type: string
            title:
              example: "D\u011Brn\xE9 \u0161t\xEDtky"
              type: string
            updated:
              description: "datum posledn\xED aktualizace v rApi - ISO 8601"
              format: date-time
              type: string
          type: object
        id:
          example: beda0a73-069b-4b92-9582-33d88bc49916
          format: uuid
          type: string
        type:
          example: show
          type: string
      required:
      - type
      - id
      type: object
    showItem_relationships:
      allOf:
      - $ref: '#/components/schemas/showItem'
      - properties:
          relationships:
            allOf:
            - $ref: '#/components/schemas/stations_r_part'
            - $ref: '#/components/schemas/serials_r_part'
            - $ref: '#/components/schemas/episodes_r_part'
            - $ref: '#/components/schemas/persons_r_part'
        type: object
    showItem_relationships_link:
      allOf:
      - properties:
          links:
            $ref: '#/components/schemas/selfLink'
        type: object
      - $ref: '#/components/schemas/showItem_relationships'
    showList_audio_object:
      properties:
        description:
          type: string
        entity:
          properties:
            id:
              format: uuid
              type: string
            type:
              enum:
              - show
              type: string
          type: object
        image:
          format: url
          type: string
        itemType:
          example: audio
          type: string
        title:
          type: string
        url:
          format: url
          type: string
      type: object
    show_r_part:
      properties:
        show:
          properties:
            data:
              nullable: true
              properties:
                id:
                  example: beda0a73-069b-4b92-9582-33d88bc49916
                  format: uuid
                  type: string
                type:
                  example: show
                  type: string
              type: object
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
          type: object
      type: object
    show_resp:
      properties:
        data:
          $ref: '#/components/schemas/showItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    showsList_widget:
      properties:
        attributes:
          properties:
            entities:
              items:
                $ref: '#/components/schemas/showList_audio_object'
              type: array
            title:
              type: string
          type: object
        id:
          format: uuid
          type: string
        type:
          example: show_list
          type: string
      type: object
    shows_r_part:
      properties:
        shows:
          properties:
            data:
              items:
                properties:
                  id:
                    example: beda0a73-069b-4b92-9582-33d88bc49916
                    format: uuid
                    type: string
                  type:
                    example: show
                    type: string
                type: object
              type: array
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
          type: object
      type: object
    shows_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/showItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              example: 2
              format: int32
              type: integer
          type: object
      type: object
    stationItem:
      properties:
        attributes:
          properties:
            asset:
              $ref: '#/components/schemas/assetItem'
            audioLinks:
              items:
                properties:
                  bitrate:
                    example: 128
                    format: int32
                    type: integer
                  linkType:
                    enum:
                    - livestream
                    - directstream
                    - timeshift
                    type: string
                  quality:
                    enum:
                    - normal
                    - low
                    type: string
                  url:
                    format: url
                    type: string
                  variant:
                    enum:
                    - acc
                    - mp3
                    - dash
                    - hls
                    type: string
                type: object
              type: array
            code:
              example: dvojka
              pattern: ^[a-z]([0-9a-z]|-)*$
              type: string
            color:
              example: '#85248F'
              type: string
            contact:
              properties:
                web:
                  example: https://dvojka.rozhlas.cz
                  type: string
              type: object
            priority:
              example: 2
              format: int32
              type: integer
            shortTitle:
              example: Dvojka
              type: string
            stationType:
              enum:
              - allover
              - regional
              - foreing
              - webradio
              type: string
            subtitle:
              example: "\u010Cesk\xFD rozhlas"
              type: string
            title:
              example: "\u010Cesk\xFD rozhlas Dvojka"
              type: string
          type: object
        id:
          example: 298f27ec-81a1-4e67-bdbe-89f05f3f5028
          format: uuid
          type: string
        meta:
          properties:
            ga:
              properties:
                siteBroadcastStation:
                  example: dvojka
                  type: string
              type: object
          type: object
        type:
          example: station
          type: string
      required:
      - type
      - id
      type: object
    stationItem_relationships:
      allOf:
      - $ref: '#/components/schemas/stationItem'
      - properties:
          relationships:
            allOf:
            - $ref: '#/components/schemas/shows_r_part'
            - $ref: '#/components/schemas/persons_r_part'
        type: object
    station_r_part:
      properties:
        station:
          properties:
            data:
              nullable: true
              properties:
                id:
                  example: 298f27ec-81a1-4e67-bdbe-89f05f3f5028
                  format: uuid
                  type: string
                type:
                  example: station
                  type: string
              type: object
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
          type: object
      type: object
    station_resp:
      properties:
        data:
          $ref: '#/components/schemas/stationItem'
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    stations_r_part:
      properties:
        stations:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 298f27ec-81a1-4e67-bdbe-89f05f3f5028
                    format: uuid
                    type: string
                  type:
                    example: station
                    type: string
                type: object
              type: array
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
          type: object
      type: object
    stations_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/stationItem'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              example: 3
              format: int32
              type: integer
          type: object
      type: object
    subscriptionData:
      properties:
        attributes:
          properties:
            created:
              format: datetime
              readOnly: true
              type: string
          type: object
      type: object
    subscriptionId:
      allOf:
      - $ref: '#/components/schemas/subscriptionType'
      - properties:
          id:
            example: 6ffa4938-0f45-4d00-898b-5de49b8ddf0e
            format: uuid
            type: string
        type: object
    subscriptionItem:
      allOf:
      - $ref: '#/components/schemas/subscriptionId'
      - $ref: '#/components/schemas/subscriptionData'
    subscriptionItem_relationships:
      allOf:
      - $ref: '#/components/schemas/subscriptionItem'
      - $ref: '#/components/schemas/subscriptionRelationships'
    subscriptionRelationships:
      properties:
        relationships:
          properties:
            playable:
              properties:
                id:
                  format: uuid
                  type: string
                type:
                  example: show
                  type: string
              type: object
          type: object
      type: object
    subscriptionType:
      properties:
        type:
          example: subscription
          type: string
      type: object
    subscription_resp:
      properties:
        data:
          $ref: '#/components/schemas/subscriptionItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    subscriptions_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/subscriptionItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    terminatedItem:
      properties:
        broadcasting:
          properties:
            active:
              example: false
              type: boolean
            since:
              example: '1952-03-10'
              format: date
              type: string
            till:
              example: '2011-01-31'
              format: date
              type: string
          type: object
        shortTitle:
          example: Praha II
          type: string
        title:
          example: "\u010Cesk\xFD rozhlas 2 - Praha"
          type: string
      type: object
    timeLine_r_part:
      properties:
        timeLine:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 34b1a5e8-2b29-4370-88f1-a22eed8588cc
                    format: uuid
                    type: string
                  type:
                    example: timeGroup
                    type: string
                type: object
              type: array
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
          type: object
      type: object
    timespanItem:
      properties:
        origin:
          enum:
          - schedule
          - ais
          - av
          - ams
          - user
          type: string
        since:
          example: '2019-05-13T19:00:07+02:00'
          format: date-time
          type: string
        till:
          example: '2019-05-13T19:17:22+02:00'
          format: date-time
          type: string
      type: object
    topicItem:
      properties:
        attributes:
          properties:
            asset:
              $ref: '#/components/schemas/assetItem'
            title:
              type: string
          type: object
        id:
          example: ec792f02-4cec-492d-8252-f88934e018c6
          format: uuid
          type: string
        type:
          example: topic
          type: string
      type: object
    topicItem_relationships:
      allOf:
      - $ref: '#/components/schemas/topicItem'
      - properties:
          relationships:
            allOf:
            - $ref: '#/components/schemas/episodesLink_r_part'
        type: object
    topic_resp:
      properties:
        data:
          $ref: '#/components/schemas/widgetTopicItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    topics_r_part:
      properties:
        topics:
          properties:
            data:
              items:
                properties:
                  id:
                    example: 298f27ec-81a1-4e67-bdbe-89f05f3f5028
                    format: uuid
                    type: string
                  type:
                    example: topic
                    type: string
                type: object
              type: array
            links:
              allOf:
              - $ref: '#/components/schemas/relatedLink'
          type: object
      type: object
    topics_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/topicItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
          - $ref: '#/components/schemas/pageLink'
        meta:
          properties:
            count:
              example: 3
              format: int32
              type: integer
          type: object
      type: object
    tutorialData:
      properties:
        attributes:
          properties:
            cancelButtonText:
              type: string
            description:
              type: string
            image:
              example: https://www.mujrozhlas.cz/sites/default/files/styles/teaser/public/2020-01/03454860.jpeg?itok=rjEJow1D
              format: url
              type: string
            okButtonText:
              type: string
            title:
              example: "M\xE1me pro v\xE1s d\xE1rek"
              type: string
          type: object
      type: object
    tutorialId:
      allOf:
      - $ref: '#/components/schemas/tutorialType'
      - properties:
          id:
            example: 3269628c-b692-46c2-b308-8c19b7958b61
            format: uuid
            type: string
        type: object
    tutorialItem:
      allOf:
      - $ref: '#/components/schemas/tutorialId'
      - $ref: '#/components/schemas/tutorialData'
    tutorialItem_relationships:
      allOf:
      - $ref: '#/components/schemas/tutorialItem'
      - properties:
          relationships:
            properties:
              entity:
                properties:
                  data:
                    properties:
                      id:
                        example: d0249823-0d33-4997-9df5-5e72c55e189c
                        format: uuid
                        type: string
                      type:
                        enum:
                        - show
                        example: show
                        type: string
                    type: object
                type: object
            type: object
        type: object
    tutorialType:
      properties:
        type:
          example: tutorialSlide
          type: string
      type: object
    tutorials_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/tutorialItem_relationships'
          type: array
      type: object
    userData_resp:
      properties:
        data:
          properties:
            attributes:
              properties:
                address:
                  type: string
                birthdate:
                  type: string
                email:
                  type: string
                name:
                  type: string
                processingPersonalData:
                  type: boolean
                surname:
                  type: string
                termsOfUse:
                  type: boolean
              type: object
            id:
              format: uuid
              type: string
            type:
              example: account
              type: string
          type: object
      type: object
    watchdogData:
      properties:
        attributes:
          properties:
            created:
              format: datetime
              readOnly: true
              type: string
          type: object
      type: object
    watchdogId:
      allOf:
      - $ref: '#/components/schemas/watchdogType'
      - properties:
          id:
            example: 6ffa4938-0f45-4d00-898b-5de49b8ddf0e
            format: uuid
            type: string
        type: object
    watchdogItem:
      allOf:
      - $ref: '#/components/schemas/watchdogId'
      - $ref: '#/components/schemas/watchdogData'
    watchdogItem_relationships:
      allOf:
      - $ref: '#/components/schemas/watchdogItem'
      - $ref: '#/components/schemas/watchdogRelationships'
    watchdogRelationships:
      properties:
        relationships:
          properties:
            playable:
              properties:
                id:
                  format: uuid
                  type: string
                type:
                  example: episode
                  type: string
              type: object
          type: object
      type: object
    watchdogType:
      properties:
        type:
          example: watchdog
          type: string
      type: object
    watchdog_resp:
      properties:
        data:
          $ref: '#/components/schemas/watchdogItem_relationships'
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    watchdogs_resp:
      properties:
        data:
          items:
            $ref: '#/components/schemas/watchdogItem_relationships'
          type: array
        links:
          allOf:
          - $ref: '#/components/schemas/selfLink'
      type: object
    widgetGroup:
      discriminator:
        mapping:
          carousel: '#/components/schemas/carousel_widget'
          section_category: '#/components/schemas/section_category_object'
          show_list: '#/components/schemas/showsList_widget'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/carousel_widget'
      - $ref: '#/components/schemas/showsList_widget'
      - $ref: '#/components/schemas/section_category_object'
    widgetTopicItem:
      properties:
        attributes:
          properties:
            asset:
              $ref: '#/components/schemas/assetItem'
            title:
              type: string
            widgets:
              items:
                $ref: '#/components/schemas/widgetGroup'
              type: array
          type: object
        id:
          example: ec792f02-4cec-492d-8252-f88934e018c6
          format: uuid
          type: string
        type:
          example: topic
          type: string
      type: object
    widgetTopicItem_relationships:
      allOf:
      - $ref: '#/components/schemas/widgetTopicItem'
      - properties:
          relationships:
            allOf:
            - $ref: '#/components/schemas/episodesLink_r_part'
        type: object
  securitySchemes:
    oauthAuth:
      flows:
        password:
          scopes: {}
          tokenUrl: /authentication
      type: oauth2
info:
  contact:
    email: some.email@address.cz
  license:
    name: TODO
    url: http://TODO.cz
  title: CR rAPI - public
  version: 0.10.01
openapi: 3.0.2
paths:
  /account:
    delete:
      description: "<b>Po\u017Eadavek na odstran\u011Bn\xED u\u017Eivatelsk\xE9ho\
        \ \xFA\u010Dtu</b>\n"
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User account (D8)
    get:
      description: "<b>Informace o u\u017Eivateli.</b>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/userData_resp'
          description: OK
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
      security:
      - oauthAuth: []
      tags:
      - User account (D8)
  /account/availability:
    get:
      description: "<b>Ov\u011B\u0159en\xED dostupnosti:</b>\n<p>- emailov\xE9 adresy</p>\n"
      parameters:
      - $ref: '#/components/parameters/emailParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/availability_resp'
          description: OK
        '400':
          $ref: '#/components/responses/badRequestError'
      tags:
      - User account (D8)
  /account/register:
    patch:
      requestBody:
        $ref: '#/components/requestBodies/register_patch'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/userData_resp'
          description: Ok
        '204':
          description: No Content
        '404':
          $ref: '#/components/responses/notFoundError'
        '409':
          $ref: '#/components/responses/conflictError'
      tags:
      - User account (D8)
    post:
      requestBody:
        $ref: '#/components/requestBodies/register_post'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/userData_resp'
          description: Created
        '400':
          $ref: '#/components/responses/badRequestError'
        '409':
          $ref: '#/components/responses/conflictError'
      tags:
      - User account (D8)
  /account/resendemail:
    get:
      description: "<b>Po\u017Eadavek na op\u011Btovn\xE9 zasl\xE1n\xED registra\u010D\
        n\xEDho emailu.</b>\n"
      parameters:
      - $ref: '#/components/parameters/emailParam'
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/badRequestError'
      tags:
      - User account (D8)
  /account/resetpassword:
    put:
      description: "<b>Obnoven\xED hesla</b>\n"
      parameters:
      - $ref: '#/components/parameters/emailParam'
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/badRequestError'
      tags:
      - User account (D8)
  /deleted-entities:
    get:
      description: "<b>Odstran\u011Bn\xE9 entiy</b>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/deleted_entity_resp'
          description: OK
      tags:
      - Deleted entities
    parameters:
    - $ref: '#/components/parameters/pageParam'
  /episodes:
    get:
      description: "<b>Kolekce epizod.</b>\n<p>Dostupn\xE9 typy <code>audioLinks</code>.</p>\n\
        <p>ondemand - ondemand wowza streaming.</p>\n<p>download - form\xE1t vhodn\xFD\
        \ pro stahov\xE1n\xED. </p>\n<p>Poskytovan\xE9 form\xE1ty audi\xED, <code>audioLinks</code>.</p>\n\
        <p>dash - MPEG-DASH, form\xE1t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xED\
        m produkty Android, Windows os.</p>\n<p>hls - HTTP Live Streaming, form\xE1\
        t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xEDm produkty Apple.</p>\n<p>mp3\
        \ - MPEG Audio Layer III, form\xE1t vhodn\xFD pro stahov\xE1n\xED.</p>\n"
      operationId: GetFilterOrderPage(filter, sort, page,"And")
      parameters:
      - $ref: '#/components/parameters/filterParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/episodes_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
      tags:
      - Episodes
    x-object-type: episode
  /episodes/{id}:
    get:
      description: "<b>Epizoda dle parametru <code>id</code></b>\n<p>Dostupn\xE9 typy\
        \ <code>audioLinks</code>.</p>\n<p>ondemand - ondemand wowza streaming.</p>\n\
        <p>download - form\xE1t vhodn\xFD pro stahov\xE1n\xED. </p>\n<p>Poskytovan\xE9\
        \ form\xE1ty audi\xED, <code>audioLinks</code>.</p>\n<p>dash - MPEG-DASH,\
        \ form\xE1t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xEDm produkty Android,\
        \ Windows os.</p>\n<p>hls - HTTP Live Streaming, form\xE1t vyu\u017E\xEDvan\xFD\
        \ p\u0159edev\u0161\xEDm produkty Apple.</p>\n<p>mp3 - MPEG Audio Layer III,\
        \ form\xE1t vhodn\xFD pro stahov\xE1n\xED.</p>\n"
      operationId: GetID(id)
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/episode_resp'
          description: OK
        '404':
          description: Not Found
      tags:
      - Episodes
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    x-object-type: episode
  /episodes/{id}/genres:
    get:
      description: "<b>Kolekce \u017E\xE1nr\u016F episody dle parametru <code>id</code></b>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/related_genres_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
        '404':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Not found
      tags:
      - Episodes
    parameters:
    - $ref: '#/components/parameters/uuidParam'
  /episodes/{id}/keywords:
    get:
      description: "<b>Kolekce kl\xED\u010Dov\xFDch slov episody dle parametru <code>id</code></b>\n"
      operationId: GetRelatedToMany(id, , ,    )
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/related_keyword_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
        '404':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Not found
      tags:
      - Episodes
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    x-object-type: episode
    x-related-types: keyword
    x-reversed-id-keyword: relationships.keywords.data.[*].id
  /genres:
    get:
      description: "<b>\u017D\xE1nr</b>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/genres_resp'
          description: OK
      tags:
      - Genres
  /help:
    get:
      description: '<b>Odkaz na dokumentaci</b>

        '
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                items:
                  example: See https://rapidoc.croapp.cz
                  type: string
                type: array
          description: OK
      tags:
      - Help
  /homepage:
    get:
      description: '<b>Data pro homepage. Carousel, dashboard, section_category</b>

        '
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/homepage_resp'
          description: OK
      tags:
      - Homepage (D8)
  /homepage-full:
    get:
      description: '<b>Data pro homepage. Carousel, dashboard, section_category</b>

        '
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/homepage_full_resp'
          description: OK
      tags:
      - Homepage (D8)
  /image-resizer/{id}/{imageStyleName}:
    get:
      description: "<b>Poskytuje asset v po\u017Eadovan\xE9m stylu</b>\n<p><code>id</code>\
        \ assetu - nap\u0159. epizody, po\u0159adu, seri\xE1lu nebo osoby</p>\n"
      responses:
        '301':
          description: Moved Permanently
          headers:
            Location:
              type: string
        '404':
          content:
            application/vnd.api+json:
              schema:
                properties:
                  code:
                    example: entity_not_found
                    type: string
                  message:
                    example: The entity with id 0d0f69c6-801a-3a33-972c-f37745af24a7
                      wasn't found
                    type: string
                type: object
          description: Not Found
      tags:
      - Other services
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    - $ref: '#/components/parameters/imageStyleNameParam'
  /keywords:
    get:
      description: "<b>Kolekce kl\xED\u010Dov\xFDch slov.</b>\n"
      operationId: GetFilterOrderPage(filter, sort, page,"And")
      parameters:
      - $ref: '#/components/parameters/filterParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/keywords_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
      tags:
      - Key words
    x-object-type: keyword
  /keywords/{id}:
    get:
      description: "<b>Kl\xED\u010Dov\xE9 slovo dle <code>id</code></b>\n"
      operationId: GetID(id)
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/keyword_resp'
          description: OK
        '404':
          description: Not Found
      tags:
      - Key words
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    x-object-type: keyword
  /persons:
    get:
      description: "<b>Informace o osob\xE1ch</b>\n"
      operationId: GetFilterOrderPage(filter, sort, page,"And")
      parameters:
      - $ref: '#/components/parameters/filterParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/persons_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
      tags:
      - Persons
    x-object-type: person
  /persons/{id}:
    get:
      description: '<b>Osoba dle parametru <code>id</code></b>

        '
      operationId: GetID(id)
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/person_resp'
          description: OK
        '404':
          description: Not found
      tags:
      - Persons
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    x-object-type: person
  /persons/{id}/participation:
    get:
      description: "<b>V\u0161echny stanice po\u0159adu dle parametru <code>id</code></b>\n"
      operationId: GetRelatedToMany(id, , , )
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/related_station_show_episode_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
        '404':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Not found
      tags:
      - Persons
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    - $ref: '#/components/parameters/filterParam'
    - $ref: '#/components/parameters/sortParam'
    - $ref: '#/components/parameters/pageParam'
    x-object-type: person
    x-related-id-episode: relationships.participants.data.[*].id
    x-related-id-show: relationships.participants.data.[*].id
    x-related-id-station: relationships.participants.data.[*].id
    x-related-types: station, show, episode
  /program:
    get:
      description: "<b>Kolekce programu episod.</b>\n<p>Dostupn\xE9 typy <code>audioLinks</code>.</p>\n\
        <p>ondemand - ondemand wowza streaming.</p>\n<p>download - form\xE1t vhodn\xFD\
        \ pro stahov\xE1n\xED. </p>\n<p>Poskytovan\xE9 form\xE1ty audi\xED, <code>audioLinks</code>.</p>\n\
        <p>dash - MPEG-DASH, form\xE1t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xED\
        m produkty Android, Windows os.</p>\n<p>hls - HTTP Live Streaming, form\xE1\
        t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xEDm produkty Apple.</p>\n<p>mp3\
        \ - MPEG Audio Layer III, form\xE1t vhodn\xFD pro stahov\xE1n\xED.</p>\n"
      parameters:
      - $ref: '#/components/parameters/filterParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/schedule_items_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
      tags:
      - Schedule
  /recommended/children:
    get:
      description: "<b>Doporu\u010Den\xE9 pro d\u011Bti</b>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/recomended_children_resp'
          description: OK
      tags:
      - Recomended
  /recommended/podcast:
    get:
      description: "<b>Doporu\u010Den\xE9 podcasty</b>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/recomended_podcast'
          description: OK
      tags:
      - Recomended
  /schedule:
    get:
      description: "<b>Kolekce programu episod.</b>\n<p>Dostupn\xE9 typy <code>audioLinks</code>.</p>\n\
        <p>ondemand - ondemand wowza streaming.</p>\n<p>download - form\xE1t vhodn\xFD\
        \ pro stahov\xE1n\xED. </p>\n<p>Poskytovan\xE9 form\xE1ty audi\xED, <code>audioLinks</code>.</p>\n\
        <p>dash - MPEG-DASH, form\xE1t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xED\
        m produkty Android, Windows os.</p>\n<p>hls - HTTP Live Streaming, form\xE1\
        t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xEDm produkty Apple.</p>\n<p>mp3\
        \ - MPEG Audio Layer III, form\xE1t vhodn\xFD pro stahov\xE1n\xED.</p>\n"
      operationId: GetFilterOrderPage(filter, sort, page,"And")
      parameters:
      - $ref: '#/components/parameters/filterParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/schedule_items_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json: null
            schema:
              $ref: '#/components/schemas/errors_resp'
          description: Bad Request
      tags:
      - Schedule
    x-object-type: scheduleEpisode
  /schedule-current:
    get:
      description: "<b>Aktu\xE1ln\u011B hrann\xE1 a 1 n\xE1sleduj\xEDc\xED episoda\
        \ programu.</b>\n<p>Dostupn\xE9 typy <code>audioLinks</code>.</p>\n<p>ondemand\
        \ - ondemand wowza streaming.</p>\n<p>download - form\xE1t vhodn\xFD pro stahov\xE1\
        n\xED. </p>\n<p>Poskytovan\xE9 form\xE1ty audi\xED, <code>audioLinks</code>.</p>\n\
        <p>dash - MPEG-DASH, form\xE1t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xED\
        m produkty Android, Windows os.</p>\n<p>hls - HTTP Live Streaming, form\xE1\
        t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xEDm produkty Apple.</p>\n<p>mp3\
        \ - MPEG Audio Layer III, form\xE1t vhodn\xFD pro stahov\xE1n\xED.</p>\n"
      operationId: GetFilterOrderPage(filter, , ,"And")
      parameters:
      - $ref: '#/components/parameters/filterParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/schedule_day_items_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
      tags:
      - Schedule
    x-object-type: scheduleEpisode
  /schedule-day:
    get:
      description: "<b>\xDApln\xE1 kolekce programu episod pro dann\xFD den.</b>\n\
        <p>Lze vyu\u017E\xEDt implicitn\xEDch filtr\u016F <code>day, stations.id</code></p>\n\
        <p><code>filter[day]=YYYY-MM-DD</code> - pmezen\xED pro konkr\xE9tn\xED den</p>\n\
        <p>Nen\xED-li filtr specifikov\xE1n, omezen\xED pro aktu\xE1ln\xED den.</p>\n\
        <p><code>filter[stations.id]=UUID</code> - omezen\xED pro konkr\xE9tn\xED\
        \ stanici</p>\n<p>Upozorn\u011Bn\xED: omezen\xED parametrem station=CODE a\
        \ filter[stations.id] nelze kombinovat. </p>\n<p>Dostupn\xE9 typy <code>audioLinks</code>.</p>\n\
        <p>ondemand - ondemand wowza streaming.</p>\n<p>download - form\xE1t vhodn\xFD\
        \ pro stahov\xE1n\xED. </p>\n<p>Poskytovan\xE9 form\xE1ty audi\xED, <code>audioLinks</code>.</p>\n\
        <p>dash - MPEG-DASH, form\xE1t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xED\
        m produkty Android, Windows os.</p>\n<p>hls - HTTP Live Streaming, form\xE1\
        t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xEDm produkty Apple.</p>\n<p>mp3\
        \ - MPEG Audio Layer III, form\xE1t vhodn\xFD pro stahov\xE1n\xED.</p>\n"
      parameters:
      - $ref: '#/components/parameters/filterParam'
      - $ref: '#/components/parameters/stationCodeParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/schedule_day_items_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
      tags:
      - Schedule
  /schedule-day-flat:
    get:
      description: "<b>Flat kolekce programu episod pro dann\xFD den.</b>\n<p>Lze\
        \ vyu\u017E\xEDt implicitn\xEDch filtr\u016F <code>day, stations.id</code></p>\n\
        <p><code>filter[day]=YYYY-MM-DD</code> - pmezen\xED pro konkr\xE9tn\xED den</p>\n\
        <p>Nen\xED-li filtr specifikov\xE1n, omezen\xED pro aktu\xE1ln\xED den.</p>\n\
        <p><code>filter[stations.id]=UUID</code> - omezen\xED pro konkr\xE9tn\xED\
        \ stanici</p>\n<p>Upozorn\u011Bn\xED: omezen\xED parametrem station=CODE a\
        \ filter[stations.id] nelze kombinovat. </p>\n<p>Dostupn\xE9 typy <code>audioLinks</code>.</p>\n\
        <p>ondemand - ondemand wowza streaming.</p>\n<p>download - form\xE1t vhodn\xFD\
        \ pro stahov\xE1n\xED. </p>\n<p>Poskytovan\xE9 form\xE1ty audi\xED, <code>audioLinks</code>.</p>\n\
        <p>dash - MPEG-DASH, form\xE1t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xED\
        m produkty Android, Windows os.</p>\n<p>hls - HTTP Live Streaming, form\xE1\
        t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xEDm produkty Apple.</p>\n<p>mp3\
        \ - MPEG Audio Layer III, form\xE1t vhodn\xFD pro stahov\xE1n\xED.</p>\n"
      parameters:
      - $ref: '#/components/parameters/filterParam'
      - $ref: '#/components/parameters/stationCodeParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/schedule_day_items_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
      tags:
      - Schedule
  /schedule/{id}:
    get:
      description: "<b>Epizoda dle parametru <code>id</code></b>\n<p>Dostupn\xE9 typy\
        \ <code>audioLinks</code>.</p>\n<p>ondemand - ondemand wowza streaming.</p>\n\
        <p>download - form\xE1t vhodn\xFD pro stahov\xE1n\xED. </p>\n<p>Poskytovan\xE9\
        \ form\xE1ty audi\xED, <code>audioLinks</code>.</p>\n<p>dash - MPEG-DASH,\
        \ form\xE1t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xEDm produkty Android,\
        \ Windows os.</p>\n<p>hls - HTTP Live Streaming, form\xE1t vyu\u017E\xEDvan\xFD\
        \ p\u0159edev\u0161\xEDm produkty Apple.</p>\n<p>mp3 - MPEG Audio Layer III,\
        \ form\xE1t vhodn\xFD pro stahov\xE1n\xED.</p>\n"
      operationId: GetID(id)
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/schedule_item_resp'
          description: OK
        '404':
          description: Not Found
      tags:
      - Schedule
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    x-object-type: scheduleEpisode
  /search:
    get:
      description: "<b>Full textov\xE9 vyhled\xE1v\xE1n\xED</b>\n<p>Pro full textov\xE9\
        \ vyhled\xE1v\xE1n\xED lze vyu\u017E\xEDt implicitn\xED filtr - <code>fulltext</code>.\
        \  </p>\n<p><code>filter[fulltext]=zpr saf buch</code> - pro vyhled\xE1n\xED\
        \ po\u0159ad\u016F, epizod ...</p>\n<p><code>filter[type]=show</code> - pro\
        \ filtrov\xE1n\xED konkr\xE9tn\xEDho typu objektu.</p>\n<p>Objekty jsou \u0159\
        azeny dle relevance.</p>\n"
      operationId: GetSpecialFilterOrderPage(filter, "title", page,"And")
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/search_resp'
          description: OK
      tags:
      - Fulltext search
    parameters:
    - $ref: '#/components/parameters/filterParam'
    - $ref: '#/components/parameters/pageParam'
    x-object-types: show, episode
  /search-aggregation:
    get:
      description: "<b>Full textov\xE9 vyhled\xE1v\xE1n\xED</b>\n<p>Pro full textov\xE9\
        \ vyhled\xE1v\xE1n\xED lze vyu\u017E\xEDt implicitn\xED filtr - <code>fulltext</code>.\
        \  </p>\n<p><code>filter[fulltext]=zpr saf buch</code> - pro vyhled\xE1n\xED\
        \ po\u0159ad\u016F, epizod ...</p>\n<p><code>filter[type]=show</code> - pro\
        \ filtrov\xE1n\xED konkr\xE9tn\xEDho typu objektu.</p>\n<p>Objekty jsou \u0159\
        azeny dle relevance.</p>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/search_aggregation_resp'
          description: OK
      tags:
      - Fulltext search
    parameters:
    - $ref: '#/components/parameters/filterParam'
    - $ref: '#/components/parameters/pageParam'
  /serials:
    get:
      description: "<b>Kolekce seri\xE1l\u016F.</b>\n"
      operationId: GetFilterOrderPage(filter, sort, page,"And")
      parameters:
      - $ref: '#/components/parameters/filterParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/serials_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
      tags:
      - Serials
    x-object-type: serial
  /serials/{id}:
    get:
      description: "<b>Seri\xE1l dle parametru <code>id</code></b>\n"
      operationId: GetID(id)
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/serial_resp'
          description: OK
        '404':
          description: Not found
      tags:
      - Serials
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    x-object-type: serial
    x-related-id-episode: relationships.serial.data.id
    x-related-types: episode
  /serials/{id}/episodes:
    get:
      description: "<b>V\u0161echny epizody seri\xE1lu dle parametru <code>id</code></b>\n\
        <p>Upozorn\u011Bn\xED: Response obsahuje pouze epizody, kter\xE9 obsahuj\xED\
        \ p\u0159ehrateln\xE1 audia. tzn. uplat\u0148uje se implicitn\xED filtr -\
        \ filter[onlyplayable]=true.</p>\n"
      operationId: GetRelatedToMany(id, , , )
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/related_episodes_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
        '404':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Not found
      tags:
      - Serials
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    - $ref: '#/components/parameters/filterParam'
    x-object-type: serial
    x-related-id-episode: relationships.serial.data.id
    x-related-types: episode
  /serials/{id}/genres:
    get:
      description: "<b>Kolekce \u017E\xE1nr\u016F seri\xE1lu dle parametru <code>id</code></b>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/serial_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
        '404':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Not found
      tags:
      - Serials
    parameters:
    - $ref: '#/components/parameters/uuidParam'
  /shows:
    get:
      description: "<b>Kolekce po\u0159ad\u016F.</b>\n"
      operationId: GetFilterOrderPage(filter, sort, page,"And")
      parameters:
      - $ref: '#/components/parameters/filterParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/includeParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/shows_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
      tags:
      - Shows
    x-object-type: show
  /shows/{id}:
    get:
      description: "<b>Po\u0159ad dle parametru <code>id</code></b>\n"
      operationId: GetID(id)
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/show_resp'
          description: OK
        '404':
          description: Not found
      tags:
      - Shows
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    - $ref: '#/components/parameters/includeParam'
    x-object-type: show
  /shows/{id}/episodes:
    get:
      description: "<b>V\u0161echny episody po\u0159adu dle parametru <code>id</code></b>\n\
        <p>Upozorn\u011Bn\xED: Response obsahuje pouze epizody, kter\xE9 obsahuj\xED\
        \ p\u0159ehrateln\xE1 audia. tzn. uplat\u0148uje se implicitn\xED filtr -\
        \ filter[onlyplayable]=true.</p>\n"
      operationId: GetRelatedToMany(id, filter, sort, page)
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/related_episodes_page_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
        '404':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Not found
      tags:
      - Shows
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    - $ref: '#/components/parameters/filterParam'
    - $ref: '#/components/parameters/sortParam'
    - $ref: '#/components/parameters/pageParam'
    x-object-type: show
    x-related-id-episode: relationships.show.data.id
    x-related-types: episode
  /shows/{id}/participants:
    get:
      description: "<b>V\u0161echny osoby jen\u017E se pod\xEDlej\xED na po\u0159\
        adu, v\u010Detn\u011B jejich role, dle parametru <code>id</code></b>\n"
      operationId: GetRelatedToMany(id, , ,  )
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/related_participatingPeson_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
        '404':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Not found
      tags:
      - Shows
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    x-object-type: show
    x-related-types: person
    x-reversed-id-person: relationships.participants.data.[*].id
  /shows/{id}/schedule-episodes:
    get:
      description: "<b>Kolekce programu epizod pro dann\xFD po\u0159ad</b>\n<p>Dostupn\xE9\
        \ typy <code>audioLinks</code>.</p>\n<p>ondemand - ondemand wowza streaming.</p>\n\
        <p>download - form\xE1t vhodn\xFD pro stahov\xE1n\xED. </p>\n<p>Poskytovan\xE9\
        \ form\xE1ty audi\xED, <code>audioLinks</code>.</p>\n<p>dash - MPEG-DASH,\
        \ form\xE1t vyu\u017E\xEDvan\xFD p\u0159edev\u0161\xEDm produkty Android,\
        \ Windows os.</p>\n<p>hls - HTTP Live Streaming, form\xE1t vyu\u017E\xEDvan\xFD\
        \ p\u0159edev\u0161\xEDm produkty Apple.</p>\n<p>mp3 - MPEG Audio Layer III,\
        \ form\xE1t vhodn\xFD pro stahov\xE1n\xED.</p>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/schedule_items_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
        '404':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Not found
      tags:
      - Shows
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    - $ref: '#/components/parameters/filterParam'
    - $ref: '#/components/parameters/sortParam'
    - $ref: '#/components/parameters/pageParam'
  /shows/{id}/serials:
    get:
      description: "<b>V\u0161echny seri\xE1ly po\u0159adu dle parametru <code>id</code></b>\n"
      operationId: GetRelatedToMany(id, filter, sort, page )
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/related_serials_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
        '404':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Not found
      tags:
      - Shows
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    - $ref: '#/components/parameters/filterParam'
    - $ref: '#/components/parameters/sortParam'
    - $ref: '#/components/parameters/pageParam'
    x-object-type: show
    x-related-id-serial: relationships.show.data.id
    x-related-types: serial
  /shows/{id}/stations:
    get:
      description: "<b>V\u0161echny stanice po\u0159adu dle parametru <code>id</code></b>\n"
      operationId: GetRelatedToMany(id, , , )
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/related_stations_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
        '404':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Not found
      tags:
      - Shows
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    x-object-type: show
    x-related-types: station
    x-reversed-id-station: relationships.stations.data.[*].id
  /stations:
    get:
      description: "<b>Seznam stanic</b>\n<p>Dostupn\xE9 typy <code>audioLinks</code>.</p>\n\
        <p>livestream </p>\n<p>directstream</p>\n"
      operationId: GetFilterOrderPage(filter, sort, page,"And")
      parameters:
      - $ref: '#/components/parameters/filterParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/stations_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
      tags:
      - Stations
    x-object-type: station
  /stations-all:
    get:
      description: "<b>Seznam v\u0161ech stanic</b>\n<p>Dostupn\xE9 typy <code>audioLinks</code>.</p>\n\
        <p>livestream </p>\n<p>directstream</p>\n"
      parameters: null
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/stations_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
      tags:
      - Stations
  /stations/{id}:
    get:
      description: '<b>Stanice dle parametru <code>id</code></b>

        '
      operationId: GetID(id)
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/station_resp'
          description: OK
        '404':
          description: Not found
      tags:
      - Stations
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    x-object-type: station
  /stations/{id}/participants:
    get:
      description: "<b>Relace stanice a osob, v\u010Detn\u011B jejich role, dle parametru\
        \ <code>id</code></b>\n"
      operationId: GetRelatedToMany(id, , ,   )
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/related_participatingPeson_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
        '404':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Not found
      tags:
      - Stations
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    - $ref: '#/components/parameters/filterParam'
    - $ref: '#/components/parameters/sortParam'
    - $ref: '#/components/parameters/pageParam'
    x-object-type: station
    x-related-types: person
    x-reversed-id-person: relationships.participants.data.[*].id
  /stations/{id}/shows:
    get:
      description: "<b>V\u0161echny po\u0159ady stanice dle parametru <code>id</code></b>\n"
      operationId: GetRelatedToMany(id, filter, sort, page)
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/related_shows_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
        '404':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Not found
      tags:
      - Stations
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    - $ref: '#/components/parameters/filterParam'
    - $ref: '#/components/parameters/sortParam'
    - $ref: '#/components/parameters/pageParam'
    x-object-type: station
    x-related-id-show: relationships.stations.data.[*].id
    x-related-types: show
  /topics:
    get:
      description: "<b>Kolekce t\xE9mat.</b>\n"
      parameters:
      - $ref: '#/components/parameters/filterParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/topics_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
      tags:
      - Topics
  /topics/{id}:
    get:
      description: "<b>T\xE9ma dle <code>id</code></b>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/topic_resp'
          description: OK
        '404':
          description: Not Found
      tags:
      - Topics
    parameters:
    - $ref: '#/components/parameters/uuidParam'
  /topics/{id}/episodes:
    get:
      description: "<b>V\u0161echny episody pro dann\xE9 t\xE9ma dle parametru <code>id</code></b>\n\
        <p>Upozorn\u011Bn\xED: Response obsahuje pouze epizody, kter\xE9 obsahuj\xED\
        \ p\u0159ehrateln\xE1 audia. tzn. uplat\u0148uje se implicitn\xED filtr -\
        \ filter[onlyplayable]=true.</p>\n"
      operationId: GetRelatedToMany(id, filter, sort, page)
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/related_episodes_page_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
        '404':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Not found
      tags:
      - Topics
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    - $ref: '#/components/parameters/filterParam'
    - $ref: '#/components/parameters/sortParam'
    - $ref: '#/components/parameters/pageParam'
  /tutorials:
    get:
      description: "<b>Pr\u016Fvodce nov\xFDch vlasnost\xED mobiln\xED aplikace.</b>\n"
      parameters:
      - $ref: '#/components/parameters/appCurrentVersionParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/tutorials_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
      tags:
      - Tutorial slides
  /user/carmode:
    get:
      description: "<b>V\u0161echny episody ur\u010Den\xE9 pro poslech v re\u017E\
        imu automode</b>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/carmodes_resp'
          description: OK
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    post:
      description: "<b>Vlo\u017E\xED episodu pro poslech v re\u017Eimu automode</b>\n"
      requestBody:
        $ref: '#/components/requestBodies/carmodes_post'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/carmodes_resp'
          description: Created
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
  /user/carmode/{id}:
    delete:
      description: "<b>Odstran\xED episodu z automode</b>\n"
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    parameters:
    - $ref: '#/components/parameters/uuidParam'
  /user/favourites:
    delete:
      description: "<b>Odstran\xED polo\u017Eku z fronty u\u017Eivatele na z\xE1klad\u011B\
        \ filtru.</b>\n<p>Podporovan\xE9 varianty filtrov\xE1n\xED:</p>\n<p>filter[playable.id]\
        \ - dle id p\u0159ehrateln\xFDch entit.</p>\n"
      parameters:
      - $ref: '#/components/parameters/filterParam'
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    get:
      description: "<b>V\u0161echny obl\xEDben\xE9 episody u\u017Eivatele</b>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/favourites_resp'
          description: OK
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    post:
      description: "<b>Vlo\u017E\xED episodu mezi obl\xEDben\xE9 polo\u017Eky u\u017E\
        ivatele.</b>\n"
      requestBody:
        $ref: '#/components/requestBodies/favourites_post'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/favourites_resp'
          description: Created
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    put:
      description: "<b>Atomicky synchronizuje frontu u\u017Eivatele s offline variantou.</b>\n\
        <p>Pro operaci delete jsou objekty attributes a relationships nepovinn\xE9\
        .</p>\n<p>Pro operaci insert je attribut id nepocinn\xFD.</p>\n"
      requestBody:
        $ref: '#/components/requestBodies/favourites_put'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/favourites_resp'
          description: Created
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
  /user/favourites/{id}:
    delete:
      description: "<b>Odstran\xED episodu z obl\xEDben\xFDch</b>\n"
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    patch:
      description: "<b>Nastaven\xED dal\u0161\xEDch attribut\u016F obl\xEDben\xE9\
        </b>\n"
      requestBody:
        $ref: '#/components/requestBodies/favourite_patch'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/favourite_resp'
          description: Ok
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
        '409':
          description: Conflict
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
  /user/history:
    get:
      description: "<b>V\u0161echny episody, kter\xE9 byly p\u0159ehr\xE1ny \xFApln\u011B\
        \ nebo z \u010D\xE1sti jsou ulo\u017Een\xE9 v historii'\n<p>Hodonta pole <code>progress</code>\
        \ je v ms.</p>\n"
      parameters:
      - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/histories_resp'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/errors_resp'
          description: Bad Request
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    post:
      description: "<b>Vlo\u017E\xED episody, kter\xE9 byly p\u0159ehr\xE1ny \xFA\
        pln\u011B nebo z \u010D\xE1sti do historie</b>\n<p>Hodonta pole <code>progress</code>\
        \ je v ms.</p>\n<p>Hodnota pole <code>mediaTitle</code> odpov\xEDd\xE1 objektu\
        \ v seznamu episodes.media.</p>\n"
      requestBody:
        $ref: '#/components/requestBodies/history_items_post'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/histories_resp'
          description: Created
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
  /user/history/{id}:
    get:
      description: "<b>Z\xEDsk\xE1n\xED objektu z historie dle ID</b>\n<p>Hodonta\
        \ pole <code>progress</code> je v ms.</p>\n<p>Hodnota pole <code>mediaTitle</code>\
        \ odpov\xEDd\xE1 objektu v seznamu episodes.media.</p>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/history_resp'
          description: Ok
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    parameters:
    - $ref: '#/components/parameters/uuidParam'
  /user/queue:
    delete:
      description: "<b>Odstran\xED v\u0161echny polo\u017Eky z fronty u\u017Eivatele.</b>\n"
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    get:
      description: "<b>V\u0161echny episody ulo\u017Een\xE9 ve front\u011B pro p\u0159\
        ehr\xE1n\xED</b>\n<p>Hodonta pole <code>progress</code> je v ms.</p>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/queue_items_resp'
          description: OK
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    post:
      description: "<b>Vlo\u017E\xED episodu do fronty pro p\u0159ehr\xE1n\xED</b>\n\
        <p>Hodonta pole <code>progress</code> je v ms.</p>\n<p>Typ fronty je FIFO.</p>\n\
        <p>M\xEDsto vlo\u017Een\xED lze ur\u010Dit pomoc\xED objektu <code>insertPoint</code>.</p>\n\
        <p>Nebude-li m\xEDsto vlo\u017Een\xED definov\xE1no bude polo\u017Eka vlo\u017E\
        ena na posledn\xED pozici.</p>\n"
      requestBody:
        $ref: '#/components/requestBodies/queue_item_post'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/queue_items_resp'
          description: Created
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    put:
      description: "<b>Nahrad\xED st\xE1vaj\xEDc\xED frontu.</b>\n<p>Hodonta pole\
        \ <code>progress</code> je v ms.</p>\n<p>Jedn\xE1 se o atomickou operaci.\
        \ Odstran\u011Bn\xED v\u0161ech polo\u017Eek a vlo\u017Een\xED polo\u017E\
        ek z requestBody<p>\n"
      requestBody:
        $ref: '#/components/requestBodies/queue_item_put'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/queue_items_resp'
          description: Created
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
  /user/queue/{id}:
    delete:
      description: "<b>Odstran\xED episodu z fronty pro p\u0159ehr\xE1n\xED</b>\n"
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    parameters:
    - $ref: '#/components/parameters/uuidParam'
    patch:
      description: "<b>Nastaven\xED aktu\xE1ln\xED pozice p\u0159ehr\xE1van\xE9 episody.</b>\n\
        <p>Hodonta pole <code>progress</code> je v ms.</p>\n<p>Nastaven\xED lze prov\xE1\
        d\u011Bt jen u aktu\xE1ln\u011B p\u0159ehr\xE1van\xE9 episody, tedy prvn\xED\
        \ polo\u017Eky ve front\u011B.</p>\n"
      requestBody:
        $ref: '#/components/requestBodies/queue_item_patch'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/queue_item_resp'
          description: Ok
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
        '409':
          description: Conflict
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
  /user/subscriptions:
    get:
      description: "<b>V\u0161echny odeb\xEDran\xE9 po\u0159ady u\u017Eivatele</b>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/subscriptions_resp'
          description: OK
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    post:
      description: "<b>Vlo\u017E\xED po\u0159ad k odeb\xEDr\xE1n\xED</b>\n"
      requestBody:
        $ref: '#/components/requestBodies/subscription_post'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/subscriptions_resp'
          description: Created
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
  /user/subscriptions/{id}:
    delete:
      description: "<b>Odstran\xED pro\u0159ad z odeb\xEDran\xFDch</b>\n"
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    parameters:
    - $ref: '#/components/parameters/uuidParam'
  /user/unfinished:
    get:
      description: "<b>Pr\xE1v\u011B p\u0159ehr\xE1van\xE1 episoda</b>\n<p>Hodonta\
        \ pole <code>progress</code> je v ms.</p>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/histories_resp'
          description: OK
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
  /user/watchdog:
    get:
      description: "<b>V\u0161echny episody pro p\u0159ipomenut\xED</b>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/watchdogs_resp'
          description: OK
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    post:
      description: "<b>Vlo\u017E\xED episodu pro p\u0159ipomenut\xED</b>\n"
      requestBody:
        $ref: '#/components/requestBodies/watchdog_post'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/watchdogs_resp'
          description: Created
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
  /user/watchdog/{id}:
    delete:
      description: "<b>Odstran\xED episodu z automode</b>\n"
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    get:
      description: "<b>Konkr\xE9tn\xED pisodu pro p\u0159ipomenut\xED</b>\n"
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/watchdog_resp'
          description: OK
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbidenError'
        '404':
          description: Not Found
      security:
      - oauthAuth: []
      tags:
      - User customization (D8)
    parameters:
    - $ref: '#/components/parameters/uuidParam'
servers:
- description: Develop server
  url: https://rapidev.croapp.cz
- description: Mock with support mocking objects
  url: https://mockservice.croapp.cz/mock
tags:
- description: Seznam stanic
  name: Stations
- description: "Po\u0159ady"
  name: Shows
- description: "Seri\xE1ly epizod"
  name: Serials
- description: "Program vys\xEDl\xE1n\xED"
  name: Schedule
- description: "Epizody po\u0159adu"
  name: Episodes
- description: "\u017D\xE1nr"
  name: Genres
- description: "Informace o osob\xE1ch"
  name: Persons
- description: "T\xE9mata"
  name: Topics
- description: "Kl\xED\u010Dov\xE1 slova"
  name: Key words
- description: "Fulltextov\xE9 vyhled\xE1v\xE1n\xED"
  name: Fulltext search
- description: "Doporu\u010Den\xE9"
  name: Recomended
- description: "Tutori\xE1l pro mobiln\xED aplikaci"
  name: Tutorial slides
- description: "Odstran\u011Bn\xE9 entity"
  name: Deleted entities
- description: "Ostatn\xED servisn\xED slu\u017Eby"
  name: Other services
- description: "Data pro homepage str\xE1nku"
  name: Homepage (D8)
- description: "U\u017Eivatelsk\xE1 nastaven\xED"
  name: User customization (D8)
- description: "Registrace u\u017Eivatele"
  name: User account (D8)
- description: Odkaz na dokumentaci
  name: Help
